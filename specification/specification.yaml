openapi: "3.0.2"
info:
  title: API сервер для проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
    * «Шесть городов» — сервис для путешественников, не желающих переплачивать за аренду жилья. Выбирайте один из шести популярных городов для путешествий и получайте актуальный список предложений по аренде.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Метод регистрирует нового пользователя

      requestBody:
        description: Данные для создания нового пользователя
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/createUser'
        required: true

      responses:
        "200":
          description: Пользователь успешно зарегистрирован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        "400":
          description: Пользователь с таким email уже существует

  /users/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Метод авторизует пользователя
      requestBody:
        description: Вход в закрытую часть приложения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/loginUser'
        required: true
      responses:
        "201":
          description: Авторизация прошла успешно
          content:
            application/json:
              schema: '#/components/schemas/loginUse'

        "401":
          description: Авторизация не пройдена
    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Метод возвращает информацию об авторизованном пользователе
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: Пользователь успешно авторизован
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/loginUser'
        "401":
          description: Пользователь не авторизован

  /users/logout:
    post:
      tags:
        - users
      summary: Выход из закрытой части приложения
      description: Метод отвечает за выход из закрытой части приложения
      responses:
        "204":
          description: Сессия завершена
        "401":
          description: Пользователь не авторизован

  /offers/users/favorite:
    get:
      tags:
        - offers
      summary: Список избранных предложений
      description: Метод возвращает список предложений, добавленных в избранное
      security:
        - Bearer: [ ]
      responses:
        "200":
          description: Список избранных предложений
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shortOffers'
        "401":
          description: Пользователь не авторизован

  /offers/favorite/{offerId}:
    post:
      tags:
        - offers
      summary: Добавление предложения в избранное
      description: Метод добавляет предложение в избранное
      security:
        - Bearer: [ ]

      responses:
        "201":
          description: Предложение успешно добавлено в избранное
        "404":
          description: Предложение с таким offerId не найдено
        "401":
          description: Пользователь не авторизован
    delete:
      tags:
        - offers
      summary: Удаление предложения из избранного
      description: Метод удаляет предложение из избранного
      security:
        - Bearer: [ ]

      responses:
        "201":
          description: Предложение успешного удалено из избранного
        "401":
          description: Пользователь не авторизован

  /offers/premium/{city}:
    post:
      tags:
        - offers
      summary: Премиальные предложения для города
      description: Метод возвращает не больше 3 предложений с флагом «Premium»
      security:
        - Bearer: [ ]
      requestBody:
        description: Премиальные предложения для города
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/shortOffers'
              "404":
                description: Список предложений для city не получен
        required: true
      responses:
        "200":
          description: Предложение успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "400":
          description: Предложение не создано из-за невалидных параметров
        "401":
          description: Пользователь не авторизован

  /offers/{offerId}:
    post:
      tags:
        - offers
      summary: Редактирование предложения
      description: Метод редактирует предложение
      security:
        - Bearer: [ ]
      requestBody:
        description: Данные для редактирования предложения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editOffer'
        required: true
      responses:
        "200":
          description: Предложение успешно изменено
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "400":
          description: Предложение не изменено из-за невалидных параметров
        "401":
          description: Пользователь не авторизован
        "404":
          description: Предложение с offerId не найдено

    delete:
      tags:
        - offers
      summary: Удаление предложения
      description: Метод удаляет предложение
      security:
        - Bearer: [ ]
      responses:
        "204":
          description: Предложение успешно удалено
        "500":
          description: Предложение не удалено
        "401":
          description: Пользователь не авторизован

    get:
      tags:
        - offers
      summary: Подробная информация по предложению
      description: Метод возвращает подробную информацию по предложению
      responses:
        "200":
          description: Подробная информация по предложению
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "404":
          description: Предложение с offerId не найдено

  /offers:
    get:
      tags:
        - offers
      summary: Список предложений по аренде
      description: Метод возвращает список предложений по аренде
      parameters:
        - name: count
          in: query
          description: Количество предложений
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: number
                    example: 120
      responses:
        "200":
          description: Список предложений по аренде
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/shortOffers'
    post:
      tags:
        - offers
      summary: Создание нового предложения
      description: Метод создает новое предложение
      security:
        - Bearer: [ ]
      requestBody:
        description: Данные для создания предложения
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editOffer'
        required: true
      responses:
        "200":
          description: Предложение успешно создано
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/offer'
        "400":
          description: Предложение не создано из-за невалидных параметров
        "401":
          description: Пользователь не авторизован

  /comments/{offerId}:
    get:
      tags:
        - comments
      summary: Список комментариев для выбранного предложения
      description: Метод возвращает список комментариев для выбранного предложения
      responses:
        "200":
          description: Список комментариев для предложения успешно получен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comments'
        "404":
          description: Не удалось найти комментарии по offerId

    post:
      tags:
        - comments
      summary: Добавление комментария
      description: Метод добавляет новый комментарий
      security:
        - Bearer: [ ]
      requestBody:
        description: Добавление комментария
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/commentCreate'
        required: true
      responses:
        "200":
          description: Комментарий успешно добавлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/comment'
        "404":
          description: Не удалось добавить комментарий по offerId
        "401":
          description: Пользователь не авторизован


components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Токен для проверки авторизации

  schemas:
    createUser:
      type: object

      properties:
        userType:
          type: string
          enum: [ simple, pro ]
          example: simple

        email:
          type: string
          example: keks@htmlacademy.ru

        username:
          type: string
          example: name

        avatar:
          type: string
          example: avatar.jpg

        password:
          type: string
          example: 123456

    user:
      type: object

      properties:
        id:
          type: string
          example: 6329c3d6a04ab1061c6425ea

        userType:
          type: string
          enum: [ simple, pro ]
          example: simple

        email:
          type: string
          example: keks@htmlacademy.ru

        username:
          type: string
          example: name

        avatar:
          type: string
          example: avatar.jpg

    loginUser:
      type: object

      properties:
        email:
          type: string
          example: keks@htmlacademy.ru

        token:
          type: string

    offer:
      type: object
      properties:
        id:
          type: string
          example: 37485jd456fgh6trj3c6329hf

        name:
          type: string
          example: Квартира
          minLength: 10
          maxLength: 100

        description:
          type: string
          example: Описание
          minLength: 20
          maxLength: 1024

        publicationDate:
          type: string
          example: 2023-11-01T00:00:00Z

        city:
          type: string
          enum: [ Paris, Cologne, Brussels, Amsterdam, Hamburg, Dusseldorf ]
          example: Paris

        previewImage:
          type: string
          example: offer.jpg

        images:
          type: array
          items:
            type: string
            example: offer.jpg
          minItems: 6
          maxItems: 6

        premium:
          type: boolean
          example: true

        favorite:
          type: boolean
          example: false

        rating:
          type: number
          format: float
          example: 2.5
          minimum: 1
          maximum: 5

        housingType:
          type: string
          enum: [ Apartment, House, Room, Hotel ]
          example: apartment

        roomCount:
          type: integer
          example: 4
          minimum: 1
          maximum: 8

        guestCount:
          type: integer
          example: 3
          minimum: 1
          maximum: 10

        cost:
          type: number
          example: 50600
          minimum: 100
          maximum: 100000

        amenities:
          type: array
          items:
            type: string
            enum: [ Breakfast, Air conditioning, Laptop friendly workspace, Baby seat, Washer, Towels, Fridge ]
            example: Breakfast, Laptop
          minItems: 1

        offerAuthor:
          $ref: '#/components/schemas/user'

        commentsCount:
          type: number
          example: 10

        coordinates:
          $ref: '#/components/schemas/coordinates'

    shortOffer:
      type: object
      properties:
        id:
          type: string
          example: 37485jd456fgh6trj3c6329hf

        name:
          type: string
          example: Квартира
          minLength: 10
          maxLength: 100

        description:
          type: string
          example: Описание
          minLength: 20
          maxLength: 1024

        publicationDate:
          type: string
          example: 2023-11-01T00:00:00Z

        city:
          type: string
          enum: [ Paris, Cologne, Brussels, Amsterdam, Hamburg, Dusseldorf ]
          example: Paris

        previewImage:
          type: string
          example: offer.jpg

        premium:
          type: boolean
          example: true

        favorite:
          type: boolean
          example: false

        rating:
          type: number
          format: float
          example: 2.5
          minimum: 1
          maximum: 5

        housingType:
          type: string
          enum: [ Apartment, House, Room, Hotel ]
          example: apartment

        cost:
          type: number
          example: 50600
          minimum: 100
          maximum: 100000

        offerAuthor:
          $ref: '#/components/schemas/user'

        commentsCount:
          type: number
          example: 10

        coordinates:
          $ref: '#/components/schemas/coordinates'

    editOffer:
      type: object
      properties:
        name:
          type: string
          example: Квартира
          minLength: 10
          maxLength: 100

        description:
          type: string
          example: Описание
          minLength: 20
          maxLength: 1024

        city:
          type: string
          enum: [ Paris, Cologne, Brussels, Amsterdam, Hamburg, Dusseldorf ]
          example: Paris

        previewImage:
          type: string
          example: offer.jpg

        images:
          type: array
          items:
            type: string
            example: [ offer.jpg, offer_room.jpg ]
          minItems: 6
          maxItems: 6

        premium:
          type: boolean
          example: true

        housingType:
          type: string
          enum: [ Apartment, House, Room, Hotel ]
          example: apartment

        roomCount:
          type: integer
          example: 4
          minimum: 1
          maximum: 8
        guestCount:
          type: integer
          example: 3
          minimum: 1
          maximum: 10
        cost:
          type: number
          example: 50600
          minimum: 100
          maximum: 100000
        amenities:
          type: array
          items:
            type: string
            enum: [ Breakfast, Air conditioning, Laptop friendly workspace, Baby seat, Washer, Towels, Fridge ]
            example: [ Breakfast, Laptop ]
          minItems: 1

        coordinates:
          $ref: '#/components/schemas/coordinates'

    shortOffers:
      type: array
      items:
        type: offer
        $ref: '#/components/schemas/shortOffer'

      comments:
        type: array
        items:
          type: offer
          $ref: '#/components/schemas/comment'

    offers:
      type: array
      items:
        type: offer
        $ref: '#/components/schemas/offer'

    coordinates:
      type: object

      $ref:
      properties:
        latitude:
          type: float
          example: 22.2233455

        longitude:
          type: float
          example: 1.33345445

    changeFavorite:
      type: object

      properties:
        favorite:
          type: boolean
          example: true


    comment:
      type: object
      properties:
        text:
          type: string
          example: Очень хорошее предложение
          minLength: 5
          maxLength: 1024

        publicationDate:
          type: string
          example: 2023-11-01T00:00:00Z

        rating:
          type: number
          example: 5
          minimum: 1
          maximum: 5
        user:
          $ref: '#/components/schemas/user'

    commentCreate:
      type: object
      properties:
        text:
          type: string
          example: Очень хорошее предложение
          minLength: 5
          maxLength: 1024

        rating:
          type: number
          example: 5
          minimum: 1
          maximum: 5
        user:
          $ref: '#/components/schemas/user'

    comments:
      type: array
      items:
        type: object
        $ref: '#/components/schemas/comment'

